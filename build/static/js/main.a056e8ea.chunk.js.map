{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","reportWebVitals.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","cookTime","servings","instructions","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","onChange","e","target","value","type","RecipeEdit","handleRecipeChange","ingredientId","newIngredients","index","findIndex","r","filter","undefined","htmlFor","min","parseInt","newIngredient","uuid","handleIngredientAdd","tempRecipesForLoadingIndicator","LOCAL_STORAGE_KEY","React","createContext","App","useState","selectedRecipeId","setSelectedRecipeId","setRecipes","selectedRecipe","find","recipeContextValue","newRecipe","newRecipes","loadRecipes","a","fetch","res","json","data","useEffect","localStorage","getItem","JSON","parse","length","setItem","stringify","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a056e8ea.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({ name, amount }) {\n  return (\n    <>\n      <span>{name}</span>\n      <span>{amount}</span>\n    </>\n  )\n}\n","import React from 'react'\nimport Ingredient from './Ingredient'\n\nexport default function IngredientList({ ingredients }) {\n  const ingredientElements = ingredients.map(ingredient => {\n    return ( \n      <Ingredient key={ingredient.id} {...ingredient}/>\n    )\n  })\n\n  return (\n    <div className=\"ingredient-grid\">\n      { ingredientElements }\n    </div>\n  )\n}\n","import React, {useContext} from 'react'\nimport IngredientList from './IngredientList'\nimport { RecipeContext } from './App'\n\nexport default function Recipe( props ) {\n  const {handleRecipeDelete, handleRecipeSelect} = useContext(RecipeContext)\n  const {\n    id,\n    name,\n    cookTime, \n    servings, \n    instructions,\n    ingredients\n  } = props\n  \n  return (\n    <div className=\"recipe\">\n      <div className=\"recipe__header\">\n        <h3 className=\"recipe__title\">{name}</h3>\n        <div>\n          <button \n            onClick={() => handleRecipeSelect(id)}  \n            className=\"btn btn--primary mr-1\"\n          >\n            Edit\n          </button>\n          <button \n            className=\"btn btn--danger\"\n            onClick={() => handleRecipeDelete(id) }\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Cook time:</span>\n        <span className=\"recipe__value\">{cookTime}</span>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Servings:</span>\n        <span className=\"recipe__value\">{servings}</span>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Instructions:<br/></span>\n        <div className=\"recipe__value recipe__instructions recipe__value--indented\">{instructions}</div>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Ingredients:<br/></span>\n        <div className=\"recipe__value\">\n          <IngredientList ingredients={ingredients}/>\n        </div>\n      </div>\n      <br/>\n    </div>\n  )\n}\n\n// style={{display:\"inline\"}","import React, { useContext } from 'react'\nimport Recipe from './Recipe'\nimport { RecipeContext } from './App'\n\nexport default function RecipeList({recipes}) {\n  // console.log(\"RecipeList:\",{recipes})\n  const {handleRecipeAdd} = useContext(RecipeContext)\n\n  return (\n    <div className=\"recipe-list\">\n      <div>\n      { recipes.map(recipe => {\n          return ( \n            <Recipe key={recipe.id} {...recipe} /> \n          )\n        })\n      }\n      </div>\n      <div className=\"recipe-list__add-recipe-btn-container\">\n        <button \n          className=\"btn btn--primary\"\n          onClick={() => handleRecipeAdd() }\n        >\n          Add Recipe\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function RecipeIngredientEdit(props) {\n  const {\n    ingredient, \n    handleIngredientChange,\n    handleIngredientDelete\n  } = props\n\n  // this is used to access the ingredient.id and original list of ingredients\n  function handleChange(changes) {\n    handleIngredientChange(ingredient.id, {...ingredient, ...changes})\n  }\n\n  return (\n    <>\n      <input \n        onChange={e => handleChange({ name: e.target.value })} // only have access to the VALUE of the input here, not id\n        value={ingredient.name}\n        className=\"recipe-edit__input\"\n        type=\"text\"/>\n      <input \n        onChange={e => handleChange({ amount: e.target.value })}\n        value={ingredient.amount}\n        className=\"recipe-edit__input\" \n        type=\"text\"/>\n      <button \n        onClick={ () => handleIngredientDelete(ingredient.id) }\n        className=\"btn btn--danger\"\n      >\n        &times;\n      </button>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\nimport RecipeIngredientEdit from './RecipeIngredientEdit.js'\nimport { RecipeContext } from './App'\nimport {v4 as uuid} from 'uuid';\n\nexport default function RecipeEdit({recipe}) {\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext)\n\n  const {\n    name,\n    cookTime,\n    instructions,\n    servings,\n    ingredients\n  } = recipe\n\n  // handleChange({name: 'New Name'})\n  function handleChange(changes) {\n    handleRecipeChange(recipe.id, { ...recipe, ...changes})\n  }\n\n  function handleIngredientChange(ingredientId, ingredient) {\n    // console.log(\"handleIngredientChange:\", ingredientId, {ingredient})\n    const newIngredients = [...recipe.ingredients]\n    const index = newIngredients.findIndex(r => r.id === ingredientId)\n    newIngredients[index] = ingredient\n    handleChange({ ingredients: newIngredients })\n  }\n\n  function handleIngredientAdd() {\n    const newIngredient = { id:uuid(), name:'', amount:''}\n    const newIngredients = [...recipe.ingredients, newIngredient]\n    handleChange({ingredients: newIngredients})\n  }\n\n  function handleIngredientDelete(id) {\n    const newIngredients = recipe.ingredients.filter( ingredient => ingredient.id !== id)\n    handleChange({ingredients: newIngredients})\n  }\n\n  return (\n    <div className=\"recipe-edit\">\n      <div className=\"recipe_edit__remove-button-container\">\n        <button \n          onClick={() => handleRecipeSelect(undefined) }\n          className=\"btn recipe_edit__remove-button\"\n          >&times;\n        </button>\n      </div>\n      <div className=\"recipe-edit__details-grid\">\n        <label \n          htmlFor=\"name\"\n          className=\"recipe-edit__label\" >\n          Name\n        </label>\n        <input \n          type=\"text\" \n          name=\"name\" \n          id=\"name\"\n          value={name}\n          onChange={e => handleChange({ name: e.target.value })}\n          className=\"recipe-edit__input\" />\n        <label \n          htmlFor=\"cookTime\"\n          className=\"recipe-edit__label\" >\n          Cook Time\n        </label>\n        <input \n          type=\"text\"   \n          name=\"cookTime\" \n          id=\"cookTime\" \n          value={cookTime}\n          onChange={e => handleChange({ cookTime: e.target.value })}\n          className=\"recipe-edit__input\"/>\n        <label \n          htmlFor=\"servings\"\n          className=\"recipe-edit__label\">\n          Servings\n        </label>\n        <input \n          type=\"number\" \n          min=\"1\" \n          name=\"servings\" \n          id=\"servings\" \n          value={servings}\n          onChange={e => handleChange({ servings: parseInt(e.target.value) || 1 })}\n          className=\"recipe-edit__input\"/>\n        <label \n          htmlFor=\"instructions\"\n          className=\"recipe-edit__label\">\n          Instructions\n        </label>\n        <textarea \n          type=\"text\" \n          name=\"instructions\" \n          id=\"instructions\"\n          value={instructions} \n          onChange={e => handleChange({ instructions: e.target.value })}\n          className=\"recipe-edit__input\"/>\n      </div>\n      <br/>\n      <label className=\"recipe-edit__label\">Ingredients</label>\n      <div className=\"recipe-edit__ingredient-grid\">\n        <div>Name</div>\n        <div>Amount</div>\n        <div></div>\n        { ingredients.map( (ingredient) => //{console.log(ingredient)} \n            <RecipeIngredientEdit \n              handleIngredientChange={handleIngredientChange}\n              handleIngredientDelete={handleIngredientDelete}\n              key={ingredient.id} \n              ingredient={ingredient} />\n          ) \n        }\n      </div>\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\n        <button \n          onClick={ () => handleIngredientAdd() }\n          className=\"btn btn--primary\"\n        >\n          Add Ingredient\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport {v4 as uuid} from 'uuid';\nimport RecipeList from './RecipeList';\nimport RecipeEdit from './RecipeEdit';\nimport '../css/app.css';\n\n// Netlify.com build/host\n// https://app.netlify.com/sites/pensive-benz-e9c005/overview\n\n// Github repo\n// https://github.com/realityexpander/reactcourse\n\n// uuid\n// https://www.npmjs.com/package/uuid\n\n\nlet tempRecipesForLoadingIndicator = [\n  {\n    id:1,\n    name: \"Loading…\",\n    servings: \"loading…\",\n    cookTime: \"loading…\",\n    instructions: \"Loading…\", \n    ingredients: [\n      {\n        id:1,\n        name: 'loading...',\n        amount: ''\n      }\n    ]\n  }\n]\n// tempRecipesForLoadingIndicator = []\n\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\n\nexport const RecipeContext = React.createContext()\n\nfunction App() {\n  const [selectedRecipeId, setSelectedRecipeId] = useState()\n  const [recipes, setRecipes] = useState(tempRecipesForLoadingIndicator)\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\n\n  // methods used in child components\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  }\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id)\n  }\n  \n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes]\n    const index = newRecipes.findIndex(recipe => recipe.id === id)\n    newRecipes[index] = recipe\n    setRecipes(newRecipes)\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuid(), \n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id:uuid(),\n          name: \"\",\n          amount: \"\"\n        }\n      ]\n    }\n\n    setSelectedRecipeId(newRecipe.id)\n    setRecipes([...recipes, newRecipe])\n  }\n  \n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(undefined)\n    }\n\n    const newRecipes = recipes.filter( (recipe) => recipe.id !== id )\n    setRecipes(newRecipes)\n  }\n\n  // load recipes from API\n  const loadRecipes = async () => {\n    const res = await fetch(\"https://cors-anywhere.herokuapp.com/https://raw.githubusercontent.com/realityexpander/reactcourse/master/src/sample.json\")\n    const data = await res.json()\n    setRecipes(data)\n  }\n  \n  // initial load from server if localstorage is empty \n  // ORDER OF USEEFFECT IS IMPORTANT\n  useEffect( () => {\n    const recipes = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if (recipes===null || JSON.parse(recipes).length===0) {\n      loadRecipes()\n    } else {\n      setRecipes( JSON.parse(recipes) )\n    }\n    return () => {}\n  }, [])\n\n  // update local storage\n  useEffect( () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n  }, [recipes])\n\n  return (\n    <RecipeContext.Provider value={ recipeContextValue }>\n      <RecipeList recipes={ recipes } />\n      {selectedRecipe && <RecipeEdit recipe={ selectedRecipe } /> }\n    </RecipeContext.Provider>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}