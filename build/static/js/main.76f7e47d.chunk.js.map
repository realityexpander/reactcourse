{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","reportWebVitals.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","handleRecipeDelete","useContext","RecipeContext","cookTime","servings","instructions","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","type","RecipeEdit","htmlFor","min","tempRecipesForLoadingIndicator","LOCAL_STORAGE_KEY","React","createContext","App","useState","setRecipes","recipeContextValue","newRecipe","uuid","newRecipes","filter","loadRecipes","a","fetch","res","json","data","useEffect","localStorage","getItem","JSON","parse","length","setItem","stringify","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76f7e47d.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({ name, amount }) {\n  return (\n    <>\n      <span>{name}</span>\n      <span>{amount}</span>\n    </>\n  )\n}\n","import React from 'react'\nimport Ingredient from './Ingredient'\n\nexport default function IngredientList({ ingredients }) {\n  const ingredientElements = ingredients.map(ingredient => {\n    return ( \n      <Ingredient key={ingredient.id} {...ingredient}/>\n    )\n  })\n\n  return (\n    <div className=\"ingredient-grid\">\n      { ingredientElements }\n    </div>\n  )\n}\n","import React, {useContext} from 'react'\nimport IngredientList from './IngredientList'\nimport { RecipeContext } from './App'\n\nexport default function Recipe( props ) {\n  const {handleRecipeDelete} = useContext(RecipeContext)\n  const {\n    id,\n    name,\n    cookTime, \n    servings, \n    instructions,\n    ingredients\n  } = props\n\n  \n  return (\n    <div className=\"recipe\">\n      <div className=\"recipe__header\">\n        <h3 className=\"recipe__title\">{name}</h3>\n        <div>\n          <button className=\"btn btn--primary mr-1\">Edit</button>\n          <button \n            className=\"btn btn--danger\"\n            onClick={() => handleRecipeDelete(id) }\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Cook time:</span>\n        <span className=\"recipe__value\">{cookTime}</span>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Servings:</span>\n        <span className=\"recipe__value\">{servings}</span>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Instructions:<br/></span>\n        <div className=\"recipe__value recipe__instructions recipe__value--indented\">{instructions}</div>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Ingredients:<br/></span>\n        <div className=\"recipe__value\">\n          <IngredientList ingredients={ingredients}/>\n        </div>\n      </div>\n      <br/>\n    </div>\n  )\n}\n\n// style={{display:\"inline\"}","import React, { useContext } from 'react'\nimport Recipe from './Recipe'\nimport { RecipeContext } from './App'\n\nexport default function RecipeList({recipes}) {\n  // console.log(\"RecipeList:\",{recipes})\n  const {handleRecipeAdd} = useContext(RecipeContext)\n\n  return (\n    <div className=\"recipe-list\">\n      <div>\n      { recipes.map(recipe => {\n          return ( \n            <Recipe key={recipe.id} {...recipe} /> \n          )\n        })\n      }\n      </div>\n      <div className=\"recipe-list__add-recipe-btn-container\">\n        <button \n          className=\"btn btn--primary\"\n          onClick={() => handleRecipeAdd() }\n        >\n          Add Recipe\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function RecipeIngredientEdit() {\n  return (\n    <>\n      <input className=\"recipe-edit__input\" type=\"text\"/>\n      <input className=\"recipe-edit__input\" type=\"text\"/>\n      <button className=\"btn btn--danger\">&times;</button>\n    </>\n  )\n}\n","import React from 'react'\nimport RecipeIngredientEdit from './RecipeIngredientEdit.js'\n\nexport default function RecipeEdit() {\n  return (\n    <div className=\"recipe-edit\">\n      <div className=\"recipe_edit__remove-button-container\">\n        <button className=\"btn recipe_edit__remove-button\">&times;</button>\n      </div>\n      <div className=\"recipe-edit__details-grid\">\n        <label \n          htmlFor=\"name\"\n          className=\"recipe-edit__label\" >\n          Name\n        </label>\n        <input \n          type=\"text\" \n          name=\"name\" \n          id=\"name\" \n          className=\"recipe-edit__input\" />\n        <label \n          htmlFor=\"cookTime\"\n          className=\"recipe-edit__label\" >\n          Cook Time\n        </label>\n        <input \n          type=\"text\"   \n          name=\"cookTime\" \n          id=\"cookTime\" \n          className=\"recipe-edit__input\"/>\n        <label \n          htmlFor=\"servings\"\n          className=\"recipe-edit__label\">\n          Servings\n        </label>\n        <input \n          type=\"number\" \n          min=\"1\" \n          name=\"servings\" \n          id=\"servings\" \n          className=\"recipe-edit__input\"/>\n        <label \n          htmlFor=\"instructions\"\n          className=\"recipe-edit__label\">\n          Instructions\n        </label>\n        <textarea \n          type=\"text\" \n          name=\"instructions\" \n          id=\"instructions\" \n          className=\"recipe-edit__input\"/>\n      </div>\n      <br/>\n      <label className=\"recipe-edit__label\">Ingredients</label>\n      <div className=\"recipe-edit__ingredient-grid\">\n        <div>Name</div>\n        <div>Amount</div>\n        <div></div>\n        <RecipeIngredientEdit />\n        <RecipeIngredientEdit />\n      </div>\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\n        <button className=\"btn btn--primary\">Add Ingredient</button>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport {v4 as uuid} from 'uuid';\nimport RecipeList from './RecipeList';\nimport RecipeEdit from './RecipeEdit';\nimport '../css/app.css';\n\n// Netlify.com build/host\n// https://app.netlify.com/sites/pensive-benz-e9c005/overview\n\n// Github repo\n// https://github.com/realityexpander/reactcourse\n\n// uuid\n// https://www.npmjs.com/package/uuid\n\n\nlet tempRecipesForLoadingIndicator = [\n  {\n    id:1,\n    name: \"Loading…\",\n    servings: \"loading…\",\n    cookTime: \"loading…\",\n    instructions: \"Loading…\", \n    ingredients: [\n      {\n        id:1,\n        name: 'loading...',\n        amount: ''\n      }\n    ]\n  }\n]\n// tempRecipesForLoadingIndicator = []\n\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\n\nexport const RecipeContext = React.createContext()\n\nfunction App() {\n  const [recipes, setRecipes] = useState(tempRecipesForLoadingIndicator)\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete\n  }\n\n  const loadRecipes = async () => {\n    const res = await fetch(\"https://cors-anywhere.herokuapp.com/https://raw.githubusercontent.com/realityexpander/reactcourse/master/src/sample.json\")\n    const data = await res.json()\n    setRecipes(data)\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuid(), \n      name: \"new\",\"servings\": 1,\n      \"cookTime\": \"1:00\",\n      \"instructions\": \"Instr.\",\n      \"ingredients\": [\n        {\n          \"id\":uuid(),\n          \"name\": \"Pork\",\n          \"amount\": \"1 Tbs\"\n        }\n      ]\n    }\n    setRecipes([...recipes, newRecipe])\n  }\n\n  function handleRecipeDelete(id) {\n    const newRecipes = recipes.filter( (recipe) => recipe.id !== id )\n    setRecipes(newRecipes)\n  }\n\n  // initial load from server if localstorage is empty \n  // ORDER OF USEEFFECT IS IMPORTANT\n  useEffect( () => {\n    const recipes = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if (recipes===null || JSON.parse(recipes).length===0) {\n      loadRecipes()\n    } else {\n      setRecipes( JSON.parse(recipes) )\n    }\n    return () => {}\n  }, [])\n\n  // update local storage\n  useEffect( () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n  }, [recipes])\n\n  return (\n    <RecipeContext.Provider value={ recipeContextValue }>\n      <RecipeList recipes={ recipes } />\n      <RecipeEdit />\n    </RecipeContext.Provider>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}